# application name
spring:
  application:
    name: mybatis-annotation

# port
server:
  port: 8888

---
# 多数据源配置
spring:
  datasource:
    # db1数据源
    db1:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/db1?useUnicode=true&characterEncoding=utf-8&useSSL=false
      username: root
      password: root@123
      hikari:
        minimum-idle: 5
        maximum-pool-size: 15
        auto-commit: true
        idle-timeout: 30000
        pool-name: DatebookHikariCP
        max-lifetime: 1800000
        connection-timeout: 30000
        connection-test-query: SELECT 1
    # db2 数据源
    db2:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/db2?useUnicode=true&characterEncoding=utf-8&useSSL=false
      username: root
      password: root@123
      hikari:
        minimum-idle: 5
        maximum-pool-size: 15
        auto-commit: true
        idle-timeout: 30000
        pool-name: DatebookHikariCP
        max-lifetime: 1800000
        connection-timeout: 30000
        connection-test-query: SELECT 1
    # db3 数据源
    db3:
      driver-class-name: com.mysql.cj.jdbc.Driver
      jdbc-url: jdbc:mysql://localhost:3306/db3?useUnicode=true&characterEncoding=utf-8&useSSL=false
      username: root
      password: root@123
      hikari:
        minimum-idle: 5
        maximum-pool-size: 15
        auto-commit: true
        idle-timeout: 30000
        pool-name: DatebookHikariCP
        max-lifetime: 1800000
        connection-timeout: 30000
        connection-test-query: SELECT 1
    type: com.zaxxer.hikari.HikariDataSource

# MyBatis
mybatis:
  # 搜索指定包别名 # 还可以在实体类上加 @Alias("User")
  type-aliases-package: com.xin.commons.multi.mybatis.annotation.bean
  #type-aliases-package: com.xxx.*.*.entity,com.xxx.*.*.*.entity
  #  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  #  mapper-locations: classpath:mybatis/mapper/**/*Mapper.xml
  #  # 加载全局的配置文件
  config_location: classpath:mybatis/mybatis-config.xml

#mybatis:
#  #配置驼峰属性自动映射
#  configuration:
#    map-underscore-to-camel-case: true


# pagehelper
pagehelper:
  # 方言
  helperDialect: mysql
  # 分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页，
  # pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
  reasonable: true
  # # 默认值false，分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
  supportMethodsArguments: true
  # 用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，不配置映射的用默认值，
  # 默认值为pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero
  params: count=countSql
  returnPageInfo: check

---
#控制台输出彩色
spring:
  output:
    ansi:
      enabled: always

