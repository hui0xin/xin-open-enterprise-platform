# application name
spring:
  application:
    name: multi-shardingjdbc

# port
server:
  port: 6666

---
#sharding-jdbc分片规则配置
#数据源
spring:
  shardingsphere:
    # 打开sql输出日志
    props.sql.show: true
    datasource:
      names: db1,db2
      # 第一个数据源
      db1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/db_1?useUnicode=true
        username: root
        password: hxNX@123
      # 第三个数据源
      db2:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://localhost:3306/db_2?useUnicode=true
        username: root
        password: hxNX@123
    sharding:
      #默认数据源
      default-data-source-name: db2
      tables:
        # 注意，这里表如果没有指定，则默认使用 db_2, 还可以设置规则，比如以t_op开头的 走 db1
        # 还以在Java中定义分库，分表策略，然后这里指定用 com.xxx.xxx.xx类名称
        xin_user_other.actual-data-nodes: db1.xin_user_other
        xin_user_dept.actual-data-nodes: db2.xin_user_dept

# MyBatis
mybatis:
  # 搜索指定包别名 # 还可以在实体类上加 @Alias("User")
  type-aliases-package: com.xin.commons.multi.shardingjdbc.bean
  #type-aliases-package: com.xxx.*.*.entity,com.xxx.*.*.*.entity
  #  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapper-locations: classpath:mapper/*Mapper.xml
  #  # 加载全局的配置文件
  config_location: classpath:mybatis/mybatis-config.xml
    #  #配置驼峰属性自动映射
    #configuration:
  #map-underscore-to-camel-case: true

logging:
  level:
    root: info
    org.springframework.web: info
    com.itheima.dbsharding: debug
---
#控制台输出彩色
spring:
  output:
    ansi:
      enabled: always

