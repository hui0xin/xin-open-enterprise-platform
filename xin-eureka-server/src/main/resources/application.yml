spring:
  application:
    name: xin-eureka-server-ha

---
#启动命令nohup java -jar xin-eureka-server-1.0-SNAPSHOT.jar --spring.profiles.active=peer1 &
spring:
  profiles: peer1
server:
  port: 8761
eureka:
  instance:
    ## 指定当profile=peer1时，主机名是peer1
    hostname: peer1
  client:
    # 是否将自己注册到Eureka Server，默认为true
    registerWithEureka: false
    # 表示是否从Eureka Server获取注册信息，默认为true。30秒获取一次
    fetchRegistry: false
    serviceUrl:
      # # 将自己注册到peer2这个Eureka上面去
      defaultZone: http://peer2:8762/eureka/,http://peer3:8763/eureka/
  server:
    # 关闭自我保护机制，保证不可用的服务被及时剔除
    enable-self-preservation: false
    # 如果2秒内没有收到某个微服务的心跳，那就剔除该微服务，（单位毫秒，默认是60*1000）
    eviction-interval-timer-in-ms: 60000

---
#启动命令nohup java -jar xin-eureka-server-1.0-SNAPSHOT.jar --spring.profiles.active=peer2 &
spring:
  profiles: peer2
server:
  port: 8762
eureka:
  instance:
    hostname: peer2
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://peer1:8761/eureka/,http://peer3:8763/eureka/
  server:
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 60000

---
#启动命令nohup java -jar xin-eureka-server-1.0-SNAPSHOT.jar --spring.profiles.active=peer2 &
spring:
  profiles: peer3
server:
  port: 8763
eureka:
  instance:
    hostname: peer3
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://peer1:8761/eureka/,http://peer2:8762/eureka/
  server:
    enable-self-preservation: false
    eviction-interval-timer-in-ms: 60000


###actuator监控点 在YAML中有特殊的含义，所以如果你想包含（或排除）所有的端点，一定要加引号
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
